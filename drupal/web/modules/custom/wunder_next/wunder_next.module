<?php

/**
 * @file
 * Main module file for wunder_next.
 */

use Drupal\Core\Site\Settings;
use Drupal\ckeditor5\Plugin\CKEditor5PluginDefinition;

/**
 * Implements hook_ENTITY_TYPE_load().
 */
function wunder_next_next_site_load($entities) {
  // We want to override the configuration entity for the next site
  // to set the frontend path based on our setting.
  // The setting is then set according to an environment variable in
  // settings.php.
  $settings = Settings::get('wunder_next.settings');
  // We expect one next site called "frontend", which we have added
  // to the initial recipe.
  foreach ($entities as $next_site) {
    if ($next_site->id() == 'frontend') {
      $next_site->setBaseUrl($settings['frontend_url']);
      $next_site->setPreviewUrl($settings['frontend_url'] . '/api/preview');
      $next_site->setRevalidateUrl($settings['frontend_url'] . '/api/revalidate');
      $next_site->setRevalidateSecret($settings['revalidate_secret']);
    }
  }
}

/**
 * Implements hook_ckeditor5_plugin_info_alter().
 */
function wunder_next_ckeditor5_plugin_info_alter(array &$plugin_definitions): void {
  // The frontend expects images with pixel dimensions, so we have to alter the
  // image resize plugin configuration to set it to pixels instead of
  // percentages  More info at:
  // https://ckeditor.com/docs/ckeditor5/latest/api/module_image_image-ImageConfig.html#member-resizeUnit
  if ($plugin_definitions['ckeditor5_imageResize'] instanceof CKEditor5PluginDefinition) {
    $image_resize_plugin_definition = $plugin_definitions['ckeditor5_imageResize']->toArray();
    $image_resize_plugin_definition["ckeditor5"]["config"]["image"]["resizeUnit"] = "px";
    $plugin_definitions['ckeditor5_imageResize'] = new CKEditor5PluginDefinition($image_resize_plugin_definition);
  };
}
